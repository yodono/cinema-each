/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppCakeRouteImport } from './routes/app/cake'
import { Route as AppSessoesPreEstreiasRouteImport } from './routes/app/sessoes/pre-estreias'
import { Route as AppEstatisticasBilheteriaRouteImport } from './routes/app/estatisticas/bilheteria'

const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCakeRoute = AppCakeRouteImport.update({
  id: '/cake',
  path: '/cake',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppSessoesPreEstreiasRoute = AppSessoesPreEstreiasRouteImport.update({
  id: '/sessoes/pre-estreias',
  path: '/sessoes/pre-estreias',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppEstatisticasBilheteriaRoute =
  AppEstatisticasBilheteriaRouteImport.update({
    id: '/estatisticas/bilheteria',
    path: '/estatisticas/bilheteria',
    getParentRoute: () => AppRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/cake': typeof AppCakeRoute
  '/app/estatisticas/bilheteria': typeof AppEstatisticasBilheteriaRoute
  '/app/sessoes/pre-estreias': typeof AppSessoesPreEstreiasRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/cake': typeof AppCakeRoute
  '/app/estatisticas/bilheteria': typeof AppEstatisticasBilheteriaRoute
  '/app/sessoes/pre-estreias': typeof AppSessoesPreEstreiasRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/cake': typeof AppCakeRoute
  '/app/estatisticas/bilheteria': typeof AppEstatisticasBilheteriaRoute
  '/app/sessoes/pre-estreias': typeof AppSessoesPreEstreiasRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/cake'
    | '/app/estatisticas/bilheteria'
    | '/app/sessoes/pre-estreias'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/app/cake'
    | '/app/estatisticas/bilheteria'
    | '/app/sessoes/pre-estreias'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/cake'
    | '/app/estatisticas/bilheteria'
    | '/app/sessoes/pre-estreias'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/cake': {
      id: '/app/cake'
      path: '/cake'
      fullPath: '/app/cake'
      preLoaderRoute: typeof AppCakeRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/sessoes/pre-estreias': {
      id: '/app/sessoes/pre-estreias'
      path: '/sessoes/pre-estreias'
      fullPath: '/app/sessoes/pre-estreias'
      preLoaderRoute: typeof AppSessoesPreEstreiasRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/estatisticas/bilheteria': {
      id: '/app/estatisticas/bilheteria'
      path: '/estatisticas/bilheteria'
      fullPath: '/app/estatisticas/bilheteria'
      preLoaderRoute: typeof AppEstatisticasBilheteriaRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppCakeRoute: typeof AppCakeRoute
  AppEstatisticasBilheteriaRoute: typeof AppEstatisticasBilheteriaRoute
  AppSessoesPreEstreiasRoute: typeof AppSessoesPreEstreiasRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCakeRoute: AppCakeRoute,
  AppEstatisticasBilheteriaRoute: AppEstatisticasBilheteriaRoute,
  AppSessoesPreEstreiasRoute: AppSessoesPreEstreiasRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
